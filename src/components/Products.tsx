
import React, { useState } from 'react';
import { Button } from "@/components/ui/button";
import OrderModal from "@/components/OrderModal";

interface Product {
  id: number;
  name: string;
  description: string;
  image: string;
  feature: string;
  icon: string;
}

const Products: React.FC = () => {
  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);
  const [isModalOpen, setIsModalOpen] = useState(false);

  const products: Product[] = [
    {
      id: 1,
      name: '–ö—É—Ä–∏–Ω—ã–π —à–∞—à–ª—ã–∫',
      description: '–õ—ë–≥–∫–∏–π –∏ —Å–æ—á–Ω—ã–π ‚Äî —Ç–æ, —á—Ç–æ –ª—é–±—è—Ç –¥–µ—Ç–∏ –∏ –≤–∑—Ä–æ—Å–ª—ã–µ',
      image: '/placeholder.svg',
      feature: '–í–∞–∫—É—É–º–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞ –¥–ª—è —Å–≤–µ–∂–µ—Å—Ç–∏',
      icon: '‚úÖ'
    },
    {
      id: 2,
      name: '–ö—É—Ä–∏–Ω—ã–µ –∫—Ä—ã–ª—ã—à–∫–∏',
      description: '–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫—Ä—ã–ª—ã—à–∫–∏ ‚Äî –∏–¥–µ–∞–ª—å–Ω–∞—è –∑–∞–∫—É—Å–∫–∞ –¥–ª—è –ø–∏–∫–Ω–∏–∫–∞',
      image: '/placeholder.svg',
      feature: '–ì–æ—Ç–æ–≤—ã –∑–∞ 10 –º–∏–Ω—É—Ç',
      icon: '‚è±'
    },
    {
      id: 3,
      name: '–°—Ç–µ–π–∫–∏',
      description: '–ú—è—Å–æ –ø—Ä–µ–º–∏—É–º-–∫–ª–∞—Å—Å–∞ –¥–ª—è –∂–∞—Ä–∫–∏ –Ω–∞ –≥—Ä–∏–ª–µ –∏–ª–∏ –≤ –¥—É—Ö–æ–≤–∫–µ',
      image: '/placeholder.svg',
      feature: '–ú–∏–Ω–∏–º—É–º —É—Å–∏–ª–∏–π ‚Äî –º–∞–∫—Å–∏–º—É–º –≤–∫—É—Å–∞',
      icon: 'üî•'
    },
    {
      id: 4,
      name: '–†—ë–±—Ä–∞',
      description: '–°–æ—á–Ω—ã–µ —Ä—ë–±—Ä—ã—à–∫–∏ –≤ —Ñ–∏—Ä–º–µ–Ω–Ω–æ–º –º–∞—Ä–∏–Ω–∞–¥–µ ‚Äî –Ω–∞—Å—Ç–æ—è—â–∏–π –¥–µ–ª–∏–∫–∞—Ç–µ—Å',
      image: '/placeholder.svg',
      feature: '–¢–∞—é—Ç –≤–æ —Ä—Ç—É',
      icon: 'üî•'
    }
  ];

  const handleOrder = (product: Product) => {
    setSelectedProduct(product);
    setIsModalOpen(true);
  };

  const handleCloseModal = () => {
    setIsModalOpen(false);
  };

  return (
    <section id="products" className="py-16 md:py-24">
      <div className="container mx-auto px-4">
        <h2 className="section-title text-center">–ì–æ—Ç–æ–≤–æ–µ –º—è—Å–æ ‚Äî —Ç–æ–ª—å–∫–æ –æ—Ç–∫—Ä–æ–π –∏ –∂–∞—Ä—å</h2>
        
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 mt-12">
          {products.map((product) => (
            <div key={product.id} className="product-card">
              <div className="relative overflow-hidden">
                <img 
                  src={product.image}
                  alt={product.name}
                  className="product-image transition-transform duration-500 hover:scale-110"
                  loading="lazy"
                />
              </div>
              <div className="p-6">
                <h3 className="text-xl font-semibold mb-2 text-gray-800">{product.name}</h3>
                <p className="text-gray-600 mb-4">{product.description}</p>
                <div className="flex items-center text-suretRed mb-4">
                  <span className="mr-2">{product.icon}</span>
                  <span className="font-medium">{product.feature}</span>
                </div>
                <div className="flex gap-2">
                  <Button variant="outline" className="flex-1 border-suretRed text-suretRed hover:bg-suretRed hover:text-white">
                    –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                  </Button>
                  <Button 
                    className="flex-1 bg-suretRed hover:bg-red-800 text-white"
                    onClick={() => handleOrder(product)}
                  >
                    –ó–∞–∫–∞–∑–∞—Ç—å
                  </Button>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
      
      {selectedProduct && (
        <OrderModal 
          isOpen={isModalOpen} 
          onClose={handleCloseModal} 
          product={selectedProduct}
        />
      )}
    </section>
  );
};

export default Products;
